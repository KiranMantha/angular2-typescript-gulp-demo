{"version":3,"sources":["Services/dialog-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAyE,eAAe,CAAC,CAAA;AACzF,mCAA0B,4CAA4C,CAAC,CAAA;AACvE,6BAA+B,iBAAiB,CAAC,CAAA;AAcjD;IAaI,YAAoB,kBAAqC;QAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;QAZlD,WAAM,GAAkB;YAC3B,aAAa,EAAE,uBAAgB;YAC/B,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,eAAe,EAAE,IAAI;YACrB,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,gBAAS;YACpB,iBAAiB,EAAE,gBAAS;SAC/B,CAAC;IAKF,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,gBAAgB,CAAC,8BAAW,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;aACxD,SAAS,CAAC,SAAS;YAChB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YAC5D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;YACpE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;YAClE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YACxE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAC7D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,gBAAgB,CAAC,cAAmB,EAAE,cAAmB;QAC7D,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,GAAG;YACxB,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO;gBACjE,IAAI,UAAU,GAAG,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBACzD,UAAU,CAAC,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAC;gBAC9C,UAAU,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;gBAC7C,UAAU,CAAC,SAAS,CAAC;oBACjB,UAAU,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBACH,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrB,GAAG,CAAC,QAAQ,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;AACL,CAAC;AAlDD;IAAC,iBAAU,EAAE;;iBAAA;AACA,qBAAa,gBAiDzB,CAAA","file":"Services/dialog-service.js","sourcesContent":["import {Component, Injectable, ComponentResolver, ViewContainerRef} from '@angular/core';\r\nimport {ModalDialog} from \"../Components/ModalDialog/dialog.component\";\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport * as _ from 'lodash';\r\n\r\ninterface IDialogConfig {\r\n    viewContainer: any;\r\n    template: string;\r\n    templateUrl: string;\r\n    closeByDocument: boolean;\r\n    classNameArray: string[];\r\n    component: any;\r\n    callBackComponent: any;\r\n}\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n    public config: IDialogConfig = {\r\n        viewContainer: ViewContainerRef,\r\n        template: '',\r\n        templateUrl: '',\r\n        closeByDocument: true,\r\n        classNameArray: [],\r\n        component: Component,\r\n        callBackComponent: Component\r\n    };\r\n    public callbackOnClose: () => void;\r\n    private _dialog: any;\r\n\r\n    constructor(private _componentResolver: ComponentResolver) {\r\n    }\r\n\r\n    public openDialog(): void {\r\n        this._createComponent(ModalDialog, this.config.viewContainer)\r\n            .subscribe(component => {\r\n                this._dialog = component;\r\n                this._dialog.instance.templateUrl = this.config.templateUrl;\r\n                this._dialog.instance.template = this.config.template;\r\n                this._dialog.instance.closeByDocument = this.config.closeByDocument;\r\n                this._dialog.instance.classNameArray = this.config.classNameArray;\r\n                this._dialog.instance.component = this.config.component;\r\n                this._dialog.instance.callBackComponent = this.config.callBackComponent;\r\n                this._dialog.instance.callbackOnClose = this.callbackOnClose;\r\n                this._dialog.instance.openDialog();\r\n            });\r\n    }\r\n\r\n    private _createComponent(_componentName: any, _viewContainer: any): Observable<Component> {\r\n        return Observable.create(obs => {\r\n            this._componentResolver.resolveComponent(_componentName).then(factory => {\r\n                let _component = _viewContainer.createComponent(factory);\r\n                _component.instance.componentRef = _component;\r\n                _component.changeDetectorRef.detectChanges();\r\n                _component.onDestroy(() => {\r\n                    _component.changeDetectorRef.detach();\r\n                });\r\n                obs.next(_component);\r\n                obs.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    public closeDialog(): void {\r\n        this._dialog.instance.closeDialog();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}